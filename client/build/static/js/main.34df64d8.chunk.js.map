{"version":3,"sources":["SearchBox.js","App.js","index.js"],"names":["SearchBox","props","react_default","a","createElement","type","className","placeholder","onChange","handleChange","App","state","name","testeeName","testName","attempts","score","sten","percentile","date_taken","candidates","loading","searchField","testeeRecords","fileName","useStyles","makeStyles","table","minWidth","classes","_ref","_ref$target","target","value","_this","setState","Object","defineProperty","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","saveAs","fetch","response","json","this","row","forEach","candidate","candidate_id","push","_this2","length","_this$state","filteredCandidates","filter","toLowerCase","includes","toLocaleLowerCase","Paper","src_SearchBox","e","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","GetApp_default","onClick","clickMe","bind","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6SAaeA,EAXG,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,SAAOC,KAAO,SACdC,UAAY,SACZC,YAAcN,EAAMM,YACpBC,SAAUP,EAAMQ,0HCwJTC,6MAvIbC,MAAQ,CACNC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,SAAU,EACVC,MAAO,EACPC,KAAM,EACNC,WAAY,EACZC,WAAY,GACZC,WAAW,GACXC,SAAS,EAGTC,YAAa,GAGbC,cAAc,GACdC,SAAS,MAWbC,UAAYC,YAAW,CACnBC,MAAO,CACLC,SAAU,SAKfC,QAAUH,YAAW,CACpBC,MAAO,CACLC,SAAU,SAIZnB,aAAe,SAAAqB,GAAA,IAAAC,EAAAD,EAAGE,OAAUC,EAAbF,EAAaE,MAAOrB,EAApBmB,EAAoBnB,KAApB,OAAgCsB,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBxB,EAAOqB,OAuBvEK,qBAAuB,WACrBC,IAAMC,KAAK,cAAeN,EAAKvB,MAAMY,eAClCkB,KAAK,kBAAMF,IAAMG,IAAI,YAAa,CAAEC,aAAc,WAClDF,KAAK,SAACG,GACL,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAIG,MAAO,CAAE1C,KAAM,oBAG7C2C,iBAAOH,EAAS,4NAjDR,8DACWI,MADX,oEACNC,kBACcA,EAASC,cAAvBJ,SACNK,KAAKjB,SAAS,CAACf,WAAY2B,EAAM1B,SAAS,8KAkB5BgC,yEACV9B,EAAgB,GACJ,GAEhB6B,KAAKzC,MAAMS,WAAWkC,QAAQ,SAAAC,GACzBA,EAAUC,eAAiBH,EAAIG,cAChCjC,EAAckC,KAAKF,KASvBH,KAAKjB,SAAS,CAACZ,cAAcA,GAAgB,WAC3C6B,KAAKd,6JAgBA,IAAAoB,EAAAN,KAEP,GAAGA,KAAKzC,MAAMU,QACZ,OAAOnB,EAAAC,EAAAC,cAAA,0BAET,IAAIgD,KAAKzC,MAAMS,WAAWuC,OACxB,OAAOzD,EAAAC,EAAAC,cAAA,qCANF,IAAAwD,EAQ2BR,KAAKzC,MAAhCS,EARAwC,EAQAxC,WAAYE,EARZsC,EAQYtC,YACXuC,EAAqBzC,EAAW0C,OAAO,SAAAP,GAAS,OACpDA,EAAU1C,WAAWkD,cAAcC,SAAS1C,EAAY2C,uBAG5D,OADEb,KAAKhC,WAAa,CAACyC,sBAGnB3D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEbJ,EAAAC,EAAAC,cAAA,4BACUF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAW5D,YAAY,4BAA4BE,aAAc,SAAC2D,GAAD,OAAOV,EAAKvB,SAAS,CAACb,YAAa8C,EAAEpC,OAAOC,WAC9G/B,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,KACEpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,eACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,aACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,iBACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACAxE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBAGJxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KAEGvB,KAAKzC,MAAMS,WAAWwD,IAAI,SAACvB,GAAD,OACzBnD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAUK,IAAKxB,EAAIG,cACjBtD,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,SAASI,UAAU,KAAKC,MAAM,OAAO1B,EAAIG,aAA1D,KACAtD,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAIxC,YAC/BX,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAIvC,UAC/BZ,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAItC,UAC/Bb,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAIrC,OAC/Bd,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAInC,YAC/BhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAIpC,MAC/Bf,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAWC,MAAM,UAAUrB,EAAIlC,YAC/BjB,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAY8E,QAASvB,EAAKwB,QAAQC,KAAKzB,EAAKL,oBA1HvD+B,aClBlBC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.34df64d8.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = (props) => {\n    return(\n        <input type = 'search' \n        className = 'search'\n        placeholder ={props.placeholder}\n        onChange={props.handleChange}\n\n        />\n    )\n}\n\nexport default SearchBox","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\n\nimport SearchBox from './SearchBox';\n\nimport \"./App.css\";\nimport MaterialTable from 'material-table';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    name: '',\n    testeeName: '',\n    testName: '',\n    attempts: 0,\n    score: 0,\n    sten: 0,\n    percentile: 0,\n    date_taken: '',\n    candidates:[],\n    loading: true,\n\n    //SearchBox\n    searchField: '',\n\n    // Test State var\n    testeeRecords:[],\n    fileName:''\n    \n  }\n\n  async componentDidMount() {\n    const url = \"https://final-server-reportgen.herokuapp.com/items\";\n    const response = await fetch(url);\n    const data =  await response.json();\n    this.setState({candidates: data, loading: false});\n  }\n\nuseStyles = makeStyles({\n    table: {\n      minWidth: 650\n    }\n  });\n\n\n classes = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\n  handleChange = ({ target: { value, name }}) => this.setState({ [name]: value })\n\n  async clickMe  (row){\n    var testeeRecords = [];\n    var allStens  = [];\n\n    this.state.candidates.forEach(candidate => {\n      if(candidate.candidate_id === row.candidate_id){\n        testeeRecords.push(candidate);\n       \n      }\n    });\n\n    // this.setState(row, function () {\n    //   this.createAndDownloadPdf();\n    // });\n    \n    this.setState({testeeRecords:testeeRecords}, function(){\n      this.createAndDownloadPdf();\n    })\n\n  }\n\n  createAndDownloadPdf = () => {\n    axios.post('/create-pdf', this.state.testeeRecords)\n      .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\n\n        \n        saveAs(pdfBlob, \"fileName.pdf\" );\n      })\n  }\n\n  render() {\n\n    if(this.state.loading) {\n      return <div>loading....</div>;\n    }\n    if(!this.state.candidates.length) {\n      return <div>Didn't get a candidate</div>\n    }\n    const {candidates, searchField} = this.state\n      const filteredCandidates = candidates.filter(candidate =>(\n        candidate.testeeName.toLowerCase().includes(searchField.toLocaleLowerCase())\n      ))\n      this.candidates = {filteredCandidates};\n    return (\n      \n      <div className=\"App\">\n\n        <h1>Candidate list</h1>\n                  <Paper>\n                    <SearchBox placeholder=\"Enter a candidate name...\" handleChange={(e) => this.setState({searchField: e.target.value})}/>\n                   <TableContainer>\n                     <Table >\n                       <TableHead>\n                         <TableRow>\n                           <TableCell align=\"center\">Candidate ID</TableCell>\n                           <TableCell align=\"center\">Testee Name</TableCell>\n                           <TableCell align=\"center\">Test Name</TableCell>\n                           <TableCell align=\"center\">Attempts</TableCell>\n                           <TableCell align=\"center\">Score</TableCell>\n                           <TableCell align=\"center\">Percentile   </TableCell>\n                           <TableCell align=\"center\">Sten</TableCell>\n                           <TableCell align=\"center\">Date Taken</TableCell>\n                         </TableRow>\n                       </TableHead>\n                       <TableBody >\n                         \n                         {this.state.candidates.map((row) => (\n                           <TableRow key={row.candidate_id}>\n                             <TableCell align=\"center\" component=\"th\" scope=\"row\">{row.candidate_id} </TableCell>\n                             <TableCell align=\"center\">{row.testeeName}</TableCell>\n                             <TableCell align=\"center\">{row.testName}</TableCell>\n                             <TableCell align=\"center\">{row.attempts}</TableCell>\n                             <TableCell align=\"center\">{row.score}</TableCell>\n                             <TableCell align=\"center\">{row.percentile}</TableCell>\n                             <TableCell align=\"center\">{row.sten}</TableCell>\n                             <TableCell align=\"center\">{row.date_taken}</TableCell>\n                             <GetAppIcon onClick={this.clickMe.bind(this,row)}/>\n                             {/* <button onClick={this.clickMe.bind(this,row)}>Download PDF</button> */}\n                           </TableRow>\n                         ))}\n                       </TableBody>\n                     </Table>\n                   </TableContainer>\n                   \n                 </Paper>     \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}